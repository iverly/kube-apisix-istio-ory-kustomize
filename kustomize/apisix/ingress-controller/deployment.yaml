---
# Source: apisix/charts/ingress-controller/templates/deployment.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apisix-ingress-controller
  namespace: apisix
  labels:
    helm.sh/chart: ingress-controller-0.13.0

    app.kubernetes.io/name: ingress-controller
    app.kubernetes.io/instance: apisix
    app.kubernetes.io/version: "1.7.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-controller
      app.kubernetes.io/instance: apisix
  template:
    metadata:
      annotations:
        checksum/config: 920853ec74110e7e6a12e12e71ce3f33ed2b5c9822bf58c0174bc5c26192d5b7
        linkerd.io/inject: enabled
      labels:
        app.kubernetes.io/name: ingress-controller
        app.kubernetes.io/instance: apisix
    spec:
      serviceAccountName: apisix-ingress-controller
      securityContext: {}
      volumes:
        - name: configuration
          configMap:
            name: apisix-configmap
            items:
              - key: config.yaml
                path: config.yaml

      initContainers:
        - name: wait-apisix-admin
          image: busybox:1.28

          command:
            [
              "sh",
              "-c",
              "until nc -z apisix-admin.apisix.svc.cluster.local 9180 ; do echo waiting for apisix-admin; sleep 2; done;",
            ]

          securityContext: {}

      containers:
        - name: ingress-controller
          command:
            - /ingress-apisix/apisix-ingress-controller
            - ingress
            - --config-path
            - /ingress-apisix/conf/config.yaml
          securityContext: {}
          image: "apache/apisix-ingress-controller:1.7.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP

          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
          resources: {}
          volumeMounts:
            - mountPath: /ingress-apisix/conf/config.yaml
              name: configuration
              subPath: config.yaml
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
